function plotTornado(S,varargin)
%% Description: 
% This function creates a tornado plot to highlight the sensitivities of
% different variables on a given set of objectives. The tornado plot helps
% understanding which variables are most influential on a given objective

%% Inputs:
% S: Table generated by calling sdo.analyze to analyze the results of the parameter sweep

% Optional Inputs: 
% FigDim:   [1x4 double]    Dimension of the figure in cm, e.g. [0,0,29.92/2,12.91]
% Title :   [string]        Title string for the plot
% XLabel:   [string]        String for the X-Axis
% YLabel:   [string]        String for the Y-Axis
% FontSize: [1x1 double]    Size of the font 
% Legend:   [1xn cellarray] Array that contains the labels of the legend
% Objective:[1x1 integer]   Select which objective should be represented by the tornado plot (e.g 1,2,3)

%-----------------
% Copyright 2022-2024 The MathWorks, Inc.
%-----------------

%% 1) Optional Inputs
% Parse input arguments
p = inputParser;

% The variables S looks different if there is only 1 or multiple objectives
if istable(S)
    addOptional(p,'BarLabels',S.Properties.RowNames')
elseif isstruct(S)    
    % Get the fieldnames of the results structure
    fieldNames = fieldnames(S);

    % Add the fieldnames variable
    addOptional(p,'BarLabels',S.(fieldNames{1}).Properties.RowNames')
end

% Add the optional inputs
addOptional(p,'Title','');
addOptional(p,'XLabel','Parameter Influence');
addOptional(p,'FigDim',[0,0,29.92/2,12.91]);
addOptional(p,'FontSize',14);
addOptional(p,'Objective',1);
addOptional(p,'Legend',0);

% Create the parse object
parse(p, varargin{:});

% Create the optional input variables
Title  = p.Results.Title;
XLabel = p.Results.XLabel;
ObjID  = p.Results.Objective;
FigDim = p.Results.FigDim; 
FntSiz = p.Results.FontSize;
barLabels = p.Results.BarLabels;
legendOpt = p.Results.Legend;

%% 2) Create tornado plot
% Create the figure
figure('Units','centimeters','Position',FigDim,'Color','white');

% The variables S looks different if there is only 1 or multiple objectives
if istable(S)
    values = S(:,ObjID).OutputName;

elseif isstruct(S)   
    % Retrieve the results in a 
    for i = 1:numel(fieldNames)
        values(:,i) = S.(fieldNames{i})(:,ObjID).OutputName;
    end
end

% Plot Colors to be used for the plots
matlabColors = [0, 118, 168;215, 136, 36;0, 75, 135;153,153,153]/255;

% Sort the results so that they are plotted in order of importance
b = barh(barLabels,values,'BaseValue',0,'BarWidth',1); xlabel(XLabel); 

% Set the axes scaling
set(gca,'XLim',[-1,1],'FontSize',12);
ax = gca; ax.FontSize = FntSiz;

if legendOpt==1
    % Add legend (compact variable names)
    legedLabes = strrep(strrep(strrep(fieldNames,'Correlation','Corr.'),'Rank','Rank '),'StandardizedRegression','Std. Reg.');
    
    % Create the legend
    legend(legedLabes,'Location','best'); 
end

grid on

% Set bar color and size
for i =1:numel(b)
    b(i).FaceColor = matlabColors(i,:);
    b(i).BarWidth = 1;
end

% Add the Title
title(Title);

end